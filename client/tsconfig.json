//https://tslang.cn/docs/handbook/compiler-options.html
{
  "compilerOptions": {
    "outDir": "./dist/js",
    "target": "ES2015",

    // 指定生成哪个模块系统代码： "None"/"CommonJS"/"AMD"/"System"/"UMD"/"ES6"/"ES2015"
    // 为了在 webpack.xxx.ts 中正常使用，需要设置为 "CommonJS"
    // 但是在浏览器环境中要想正确使用，需要设置为 "ES2015"
    // (如果需要的话，该设置会在 ts-loader compilerOptions 中被重写，使用 babel/typescript 就没关系了)
    "module": "CommonJS",

    "noImplicitAny": true, // 禁止隐式 any
    "noImplicitThis": true, // 禁止隐式 this, this 不默认识别为 any
    // "emitDecoratorMetadata": true, // 启用 元数据反射
    // "noUnusedParameters": true,
    "removeComments": true,
    "preserveConstEnums": true,
    "isolatedModules": true, // 是否作为独立模块 禁止 re-export type

    "allowSyntheticDefaultImports": true, //允许从没有设置默认导出的模块中默认导入
    "experimentalDecorators": true, // 允许使用还处于 staging-2 的 装饰器语法

    "moduleResolution": "Node", // 当 module === "es6" 时，必须设置，否则部分自带 typing 的模块无法找到

    "allowJs": true, // 控制是否可以引入 .js 文件

    "resolveJsonModule": true, // 允许导入 json 文件
    "esModuleInterop": true, // 兼容 babel 等其他 ECMAScript 模块的实现

    // "sourceMap": true, // webpack 下会默认关闭, 所以看起来无效
    "lib": ["DOM", "ES2020"], // 仅仅使用 ts 进行语法检查

    "jsx": "preserve", // 保留 JSX 语法, 后续使用 babel 转换
    // "jsxFactory": "h", // h 对 vue 无效, 语法不兼容

    "newLine": "LF",

    // "declarationDir": ".", // 设置 .d.ts 文件路径
    // "declaration": true, // 控制是否生成 .d.ts 文件(当前 dts 文件生成问题太多，无法使用)

    "baseUrl": ".",
    "paths": {
      "@/*": ["./*"],
      "@common/*": ["../common/*"]
    }
  },

  "include": ["./**/*"],
  "exclude": ["node_modules", "dist", "dist-*"]
}
